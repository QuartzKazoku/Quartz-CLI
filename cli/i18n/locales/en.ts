// English translations
import type { Translations } from '../locales';

export const en: Translations = {
  common: {
    success: '✅ Success',
    error: '❌ Error',
    warning: '⚠️  Warning',
    info: 'ℹ️  Info',
    loading: '⏳ Loading...',
    cancel: 'Cancel',
    confirm: 'Confirm',
  },

  cli: {
    usage: 'Usage',
    commands: 'Commands',
    options: 'Options',
    examples: 'Examples',
    moreInfo: 'More Info',
    subtitle: 'AI-Powered Git Workflow Assistant',
    help: 'Show help information',
    version: 'Show version number',
    configDesc: 'Configuration management (API Key, model, etc.)',
    initConfig: 'Initialize configuration',
  },

  review: {
    starting: '🚀 Starting local code review...\n',
    foundFiles: '📁 Found {count} files to review:\n',
    reviewing: '🔍 Reviewing: {file}',
    found: 'Found',
    issues: 'issues',
    generating: '📊 Generating summary...',
    result: 'Quartz Results',
    score: '📊 Score',
    summary: '📝 Summary',
    statistics: '📋 Issue Statistics',
    error: 'Errors',
    warning: 'Warnings',
    suggestion: 'Suggestions',
    total: 'Total',
    details: '📝 Detailed Issues:\n',
    noFiles: '✅ No files to review',
    tip: '   Tip: Modify some files first, or use --files to specify files',
    saved: '💾 Results saved to: {path}\n',
  },

  commit: {
    starting: '🚀 Generating Commit Message...\n',
    foundStaged: '📁 Found {count} staged files:\n',
    generating: '💎 Quartz is generating commit message...\n',
    generated: '📝 Generated Commit Message:',
    tips: '💡 Tips:',
    editTip: '   - Use --edit or -e to edit before committing',
    manualTip: '   - Use ↑↓ keys to select message, Enter to confirm\n',
    saved: '💾 Commit message saved to: {path}\n',
    noStaged: '❌ No staged changes',
    useGitAdd: '   Please use git add to stage files first',
    success: '\n✅ Commit successful!',
    failed: '❌ Commit failed',
    cancelled: '\n⚠️  Commit cancelled',
    editMode: '✏️  Edit mode: Modify commit message in editor',
    autoStaged: '📦 Automatically staged all changes (git add .)\n',
    stageFailed: '❌ Failed to stage files',
    selectPrompt: '📝 Select a commit message (use ↑↓ keys, Enter to confirm, Ctrl+C to cancel):\n',
    generatingOptions: '🤖 Generating {count} commit message options...\n',
    selectedMessage: '\n✨ Selected commit message [{index}]:\n',
  },

  pr: {
    starting: '🚀 Generating Pull Request description...\n',
    currentBranch: '📌 Current branch',
    targetBranch: '📌 Target branch',
    repository: '📦 Repository',
    statistics: '📊 Change statistics:',
    commits: 'commits',
    filesChanged: 'files changed',
    generating: '💎 Quartz is generating PR description...\n',
    generatedTitle: '📝 Generated PR Title:',
    generatedBody: '\n📝 Generated PR Description:',
    tips: '💡 Tips:',
    autoTip: '   - Use --auto or -a to create PR automatically',
    ghTip: '   - Use --gh option to create via GitHub CLI',
    selectTip: '   - Use --select or -s to interactively select target branch',
    baseTip: '   - Use --base <branch> to specify target branch',
    manualTip: '   - Or manually copy the description to GitHub\n',
    saved: '💾 PR description saved to: {path}\n',
    creating: '⚡ Creating PR automatically...\n',
    success: '\n✅ PR created successfully!',
    failed: '❌ Failed to create PR',
    sameBranch: '❌ Error: Current branch ({current}) same as target',
    switchBranch: '   Please switch to a feature branch first',
    noDiff: '❌ No difference between current and {base} branch',
    ensureBranch: '   Please ensure {base} branch exists',
    pushingBranch: '📤 Pushing branch {branch} to remote repository...',
    branchPushed: '✅ Branch pushed to remote repository',
    selectBranch: 'Select target branch',
    noBranches: '❌ No available branches',
    noToken: '❌ Error: GITHUB_TOKEN is not set',
    useGHTip: '   Please use --gh option to create PR via GitHub CLI',
  },

  scoreLevel: {
    excellent: 'Excellent',
    good: 'Good',
    pass: 'Pass',
    needImprovement: 'Needs Improvement',
  },

  config: {
    usage: '💎 Quartz Configuration Management\n\nUsage: quartz config <command> [options]',
    commands: 'Available Commands:',
    listDesc: 'List all configurations',
    setDesc: 'Set a configuration value',
    getDesc: 'Get a configuration value',
    initDesc: 'Interactive configuration wizard',
    availableKeys: 'Available Keys:',
    examples: 'Examples:',
    current: '\n📋 Current Configuration:',
    notSet: '❌ {key} is not set',
    notConfigured: 'Not configured',
    set: '✅ Set {key}={value}',
    keys: {
      apiKey: 'OpenAI API Key',
      baseUrl: 'OpenAI API Base URL',
      model: 'OpenAI Model Name',
      gitPlatform: 'Git Platform',
      githubToken: 'GitHub Personal Access Token (optional)',
      gitlabToken: 'GitLab Personal Access Token (optional)',
      gitlabUrl: 'GitLab Server URL',
      language: 'Interface Language',
      promptLanguage: 'AI Prompt Language',
    },
    wizard: {
      welcome: '🚀 Welcome to Quartz Configuration Wizard!\n   We will help you set up the necessary configurations.\n',
      apiKey: 'Enter your OpenAI API Key: ',
      apiKeyWithCurrent: 'Enter your OpenAI API Key (current: {current}, press Enter to skip): ',
      baseUrl: 'OpenAI API Base URL (default: {default}, press Enter for default): ',
      model: 'OpenAI Model (default: {default}, press Enter for default): ',
      gitPlatform: 'Choose Git platform [github/gitlab.ts] (current: {default}, use arrow keys to select): ',
      githubToken: 'GitHub Token (optional, for creating PRs, press Enter to skip): ',
      githubTokenWithCurrent: 'GitHub Token (current: {current}, press Enter to skip): ',
      gitlabToken: 'GitLab Token (optional, for creating MRs, press Enter to skip): ',
      gitlabTokenWithCurrent: 'GitLab Token (current: {current}, press Enter to skip): ',
      gitlabUrl: 'GitLab Server URL (default: {default}, press Enter for default): ',
      language: 'Choose interface language [zh-CN/zh-TW/ja/ko/en] (default: {default}, press Enter for default): ',
      success: '✅ Configuration saved successfully!',
      saved: '💾 Configuration saved to: {path}',
    },
    errors: {
      setUsage: '❌ Usage: quartz config set <key> <value>',
      getUsage: '❌ Usage: quartz config get <key>',
      unknownCommand: '❌ Unknown command: {command}',
      saveProfileUsage: '❌ Usage: quartz config save-profile <name>',
      loadProfileUsage: '❌ Usage: quartz config load-profile <name>',
      deleteProfileUsage: '❌ Usage: quartz config delete-profile <name>',
    },
    profilesDesc: 'Configuration profile management',
    profileSaved: '✅ Profile saved: {name}',
    profileLoaded: '✅ Profile loaded: {name}',
    profileDeleted: '✅ Profile deleted: {name}',
    profileNotFound: '❌ Profile not found: {name}',
    savedProfiles: 'Saved Profiles',
    availableProfiles: 'Available profiles:',
    noProfiles: '📋 No saved profiles\n   Use "quartz config save-profile <name>" to save current configuration',
    configItems: 'config items',
    configuredPlatforms: 'Configured Code Hosting Platforms:',
    platformCount: '{count} platform configurations',
    gitlabTokenSetFirst: 'Please set GITLAB_TOKEN first',
    gitPlatformDeprecated: 'Warning: GIT_PLATFORM config is deprecated, please configure the corresponding platform TOKEN directly',
    unknownKey: 'Unknown configuration key: {key}',
  },

  errors: {
    noApiKey: '❌ Error: OPENAI_API_KEY is not set',
    setApiKey: '   Please run quartz config init or create quartz.json file',
    apiFailed: '❌ API call failed',
    fileNotFound: '❌ File not found',
    gitError: '❌ Git operation failed',
    networkError: '❌ Network error',
  },
};
