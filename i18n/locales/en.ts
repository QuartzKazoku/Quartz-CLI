//i18n/locales/en.ts
// English translations
import type { Translations } from '@/i18n/locales';

export const en: Translations = {
  common: {
    success: '✅ Success',
    error: '❌ Error',
    warning: '⚠️  Warning',
    info: 'ℹ️  Info',
    loading: '⏳ Loading...',
    cancel: 'Cancel',
    confirm: 'Confirm',
  },

  migration: {
    detected: '⚠️  Configuration migration needed',
    starting: '🔄 Starting configuration migration...',
    success: '✅ Configuration successfully migrated from v{from} to v{to}',
    applied: '📋 Applied migrations:',
    errors: '❌ Errors during migration:',
    failed: 'Configuration migration failed: {error}',
  },

  cli: {
    usage: 'Usage',
    commands: 'Commands',
    options: 'Options',
    examples: 'Examples',
    moreInfo: 'More Info',
    subtitle: 'AI-Powered Git Workflow Assistant',
    help: 'Show help information',
    version: 'Show version number',
    initDesc: 'Initialize Quartz configuration directory',
    configDesc: 'Configuration management (API Key, model, etc.)',
    initProject: 'Initialize configuration',
    initConfig: 'Configuration wizard',
  },

  review: {
    starting: '🚀 Starting local code review...\n',
    foundFiles: '📁 Found {count} files to review:\n',
    reviewing: '🔍 Reviewing: {file}',
    found: 'Found',
    issues: 'issues',
    generating: '📊 Generating summary...',
    result: 'Quartz Results',
    score: '📊 Score',
    summary: '📝 Summary',
    statistics: '📋 Issue Statistics',
    error: 'Errors',
    warning: 'Warnings',
    suggestion: 'Suggestions',
    total: 'Total',
    details: '📝 Detailed Issues:\n',
    noFiles: '✅ No files to review',
    tip: '   Tip: Modify some files first, or use --files to specify files',
    saved: '💾 Results saved to: {path}\n',
  },

  commit: {
    starting: '🚀 Generating Commit Message...\n',
    foundStaged: '📁 Found {count} staged files:\n',
    generating: '💎 Quartz is generating commit message...\n',
    generated: '📝 Generated Commit Message:',
    tips: '💡 Tips:',
    editTip: '   - Use --edit or -e to edit before committing',
    manualTip: '   - Use ↑↓ keys to select message, Enter to confirm\n',
    saved: '💾 Commit message saved to: {path}\n',
    noStaged: '❌ No staged changes',
    useGitAdd: '   Please use git add to stage files first',
    success: '\n✅ Commit successful!',
    failed: '❌ Commit failed',
    cancelled: '\n⚠️  Commit cancelled',
    editMode: '✏️  Edit mode: Modify commit message in editor',
    autoStaged: '📦 Automatically staged all changes (git add .)\n',
    stageFailed: '❌ Failed to stage files',
    selectPrompt: '📝 Select a commit message (use ↑↓ keys, Enter to confirm, Ctrl+C to cancel):\n',
    generatingOptions: '🤖 Generating {count} commit message options...\n',
    selectedMessage: '\n✨ Selected commit message [{index}]:\n',
  },

  pr: {
    starting: '🚀 Generating Pull Request description...\n',
    currentBranch: '📌 Current branch',
    targetBranch: '📌 Target branch',
    repository: '📦 Repository',
    statistics: '📊 Change statistics:',
    commits: 'commits',
    filesChanged: 'files changed',
    generating: '💎 Quartz is generating PR description...\n',
    generatingOptions: '🤖 Generating {count} PR description options...\n',
    generatedTitle: '📝 Generated PR Title:',
    generatedBody: '\n📝 Generated PR Description:',
    generatedOptions: '📝 Generated PR Options:',
    tips: '💡 Tips:',
    autoTip: '   - Use --auto or -a to create PR automatically',
    ghTip: '   - Use --gh option to create via GitHub CLI',
    selectTip: '   - Use --select or -s to interactively select target branch',
    baseTip: '   - Use --base <branch> to specify target branch',
    manualTip: '   - Or manually copy the description to GitHub\n',
    saved: '💾 PR description saved to: {path}\n',
    creating: '⚡ Creating PR automatically...\n',
    success: '\n✅ PR created successfully!',
    failed: '❌ Failed to create PR',
    sameBranch: '❌ Error: Current branch ({current}) same as target',
    switchBranch: '   Please switch to a feature branch first',
    noDiff: '❌ No difference between current and {base} branch',
    ensureBranch: '   Please ensure {base} branch exists',
    pushingBranch: '📤 Pushing branch {branch} to remote repository...',
    branchPushed: '✅ Branch pushed to remote repository',
    selectBranch: 'Select target branch',
    selectPrompt: 'Select a PR description (use ↑↓ keys, Enter to confirm, Ctrl+C to cancel):\n',
    selectedOption: '\n✨ Selected PR option [{index}]:\n',
    cancelled: '\n⚠️  PR creation cancelled',
    optionTitle: '[{index}] {title}',
    selectedTitle: 'Selected Title',
    selectedBody: 'Selected Description',
    platformTokenRequired: 'Platform token required to create PR',
    noBranches: '❌ No available branches',
    noToken: '❌ Error: GITHUB_TOKEN is not set',
    useGHTip: '   Please use --gh option to create PR via GitHub CLI',
  },

  scoreLevel: {
    excellent: 'Excellent',
    good: 'Good',
    pass: 'Pass',
    needImprovement: 'Needs Improvement',
  },

  changelog: {
    starting: '🚀 Generating Changelog...',
    foundTags: 'Found {count} tags',
    generating: 'Generating changelog...',
    initial: 'Initial Release',
    fetching: 'Fetching commits...',
    found: 'Found {count} commits',
    noCommits: 'No commits found',
    preview: 'Changelog Preview:',
    saved: 'Changelog saved to: {path}',
    saveFailed: 'Failed to save changelog',
    success: 'Changelog generated successfully!',
    location: 'Location',
  },

  config: {
    usage: '💎 Quartz Configuration Management\n\nUsage: quartz config <command> [options]',
    commands: 'Available Commands:',
    listDesc: 'List all configurations',
    setDesc: 'Set a configuration value',
    getDesc: 'Get a configuration value',
    initDesc: 'Interactive configuration wizard',
    availableKeys: 'Available Keys:',
    examples: 'Examples:',
    current: '\n📋 Current Configuration:',
    notSet: '❌ {key} is not set',
    notConfigured: 'Not configured',
    set: '✅ Set {key}={value}',
    updated: '✅ Configuration updated: {key}={value}',
    priority: '\n📊 Configuration Priority: Environment Variables > Project Config > Global Config > Defaults',
    activeSources: '\n🔍 Active Configuration Sources:',
    runtimeOverridesActive: '⚡ Runtime Overrides (from Environment Variables):',
    runtimeConfigTitle: 'Runtime Configuration (Environment Variables)',
    noRuntimeOverrides: '   No runtime overrides active',
    setEnvVarsHint: '   Set environment variables like OPENAI_API_KEY, OPENAI_BASE_URL, etc.',
    activeOverrides: 'Active Overrides',
    envExampleTitle: 'Environment Variable Examples',
    runtimeDesc: 'Show runtime configuration (environment variables)',
    setGlobalDesc: 'Set a global configuration value',
    initGlobalDesc: 'Initialize global configuration',
    initGlobal: 'Initialize global configuration',
    globalConfigExists: '⚠️  Global configuration already exists',
    globalConfigPath: '📁 Global configuration path: {path}',
    globalConfigCreated: '✅ Global configuration created: {path}',
    globalInitSuccess: '🎉 Global configuration initialized successfully!',
    globalConfigInfo: '\n💡 You can now use Quartz in any project without running "quartz init"',
    globalConfig: 'Global Configuration',
    globalSetNotImplemented: '⚠️  Setting global configuration values is not yet implemented\n   Please edit the file directly: {path}',
    keys: {
      apiKey: 'OpenAI API Key',
      baseUrl: 'OpenAI API Base URL',
      model: 'OpenAI Model Name',
      gitPlatform: 'Git Platform',
      githubToken: 'GitHub Personal Access Token (optional)',
      gitlabToken: 'GitLab Personal Access Token (optional)',
      gitlabUrl: 'GitLab Server URL',
      language: 'Interface Language',
      promptLanguage: 'AI Prompt Language',
    },
    wizard: {
      welcome: '🚀 Welcome to Quartz Configuration Wizard!\n   We will help you set up the necessary configurations.\n',
      apiKey: 'Enter your OpenAI API Key: ',
      apiKeyWithCurrent: 'Enter your OpenAI API Key (current: {current}, press Enter to skip): ',
      baseUrl: 'OpenAI API Base URL (default: {default}, press Enter for default): ',
      model: 'OpenAI Model (default: {default}, press Enter for default): ',
      gitPlatform: 'Choose Git platform [github/gitlab.ts] (current: {default}, use arrow keys to select): ',
      githubToken: 'GitHub Token (optional, for creating PRs, press Enter to skip): ',
      githubTokenWithCurrent: 'GitHub Token (current: {current}, press Enter to skip): ',
      gitlabToken: 'GitLab Token (optional, for creating MRs, press Enter to skip): ',
      gitlabTokenWithCurrent: 'GitLab Token (current: {current}, press Enter to skip): ',
      gitlabUrl: 'GitLab Server URL (default: {default}, press Enter for default): ',
      language: 'Choose interface language [zh-CN/zh-TW/ja/ko/en] (default: {default}, press Enter for default): ',
      success: '✅ Configuration saved successfully!',
      saved: '💾 Configuration saved to: {path}',
    },
    errors: {
      setUsage: '❌ Usage: quartz config set <key> <value>',
      getUsage: '❌ Usage: quartz config get <key>',
      unknownCommand: '❌ Unknown command: {command}',
      saveProfileUsage: '❌ Usage: quartz config save-profile <name>',
      loadProfileUsage: '❌ Usage: quartz config load-profile <name>',
      deleteProfileUsage: '❌ Usage: quartz config delete-profile <name>',
      switchProfileUsage: '❌ Usage: quartz config switch-profile <name>',
    },
    profilesDesc: 'Configuration profile management',
    profileSaved: '✅ Profile saved: {name}',
    profileLoaded: '✅ Profile loaded: {name}',
    profileSwitched: '✅ Switched to profile: {name}',
    profileDeleted: '✅ Profile deleted: {name}',
    profileNotFound: '❌ Profile not found: {name}',
    currentProfile: 'Currently Active Profile',
    savedProfiles: 'Saved Profiles',
    availableProfiles: 'Available profiles:',
    noProfiles: '📋 No saved profiles\n   Use "quartz config save-profile <name>" to save current configuration',
    configItems: 'config items',
    configuredPlatforms: 'Configured Code Hosting Platforms:',
    platformCount: '{count} platform configurations',
    gitlabTokenSetFirst: 'Please set GITLAB_TOKEN first',
    gitPlatformDeprecated: 'Warning: GIT_PLATFORM config is deprecated, please configure the corresponding platform TOKEN directly',
    unknownKey: 'Unknown configuration key: {key}',
  },

  init: {
    starting: '🚀 Initializing Quartz configuration...',
    alreadyInitialized: '⚠️  Quartz is already initialized',
    reinitializeHint: '💡 If you need to reinitialize, please delete the .quartz directory first',
    dirExists: 'ℹ️  Configuration directory already exists: {dir}',
    dirCreated: '✅ Configuration directory created: {dir}',
    configCreated: '✅ Configuration file created: {path}',
    configExists: 'ℹ️  Configuration file already exists: {path}',
    versionInitialized: '✅ Version metadata initialized',
    exampleCreated: '✅ Example configuration file created: {path}',
    exampleExists: 'ℹ️  Example configuration file already exists: {path}',
    success: 'Quartz configuration initialized successfully!',
    complete: 'Initialization Complete',
    nextSteps: 'Next steps:',
    setupConfig: 'Run configuration wizard',
    viewCommands: 'View all available commands',
    foundOldConfig: 'ℹ️  Found old configuration file: {path}',
    migrated: '✅ Configuration migrated: {from} → {to}',
    oldConfigReminder: '💡 Tip: You can manually delete the old configuration file',
    gitignoreReminder: '💡 Consider adding configuration file to .gitignore:',
    globalConfigDetected: '🌍 Global configuration detected',
    canUseDirectly: '✓ You can use Quartz commands directly without project-specific config',
    projectConfigOptional: '⚠️ Project configuration will override global settings',
    noGlobalConfig: 'ℹ️  No global configuration found',
    suggestGlobal: '💡 Tip: Run "quartz config init --global" to set up global configuration',
    confirmProjectConfig: '   Then you can use Quartz in any project without project-specific initialization',
    onlyNeededIf: '💡 Project configuration is optional and only needed if:',
    globalConfigHint: '   • You want to override global settings for this project',
    globalConfigHint2: '   • This project has different AI provider or platform requirements',
  },

  errors: {
    noApiKey: '❌ Error: OPENAI_API_KEY is not set',
    setApiKey: '   Please run quartz init then quartz config init to configure',
    apiFailed: '❌ API call failed',
    fileNotFound: '❌ File not found',
    gitError: '❌ Git operation failed',
    networkError: '❌ Network error',
  },

  branch: {
    starting: '🚀 Branch Management...\n',
    list: '📋 Branch List:',
    created: '✅ Created and switched to branch: {name}',
    createdNoCheckout: '✅ Created branch: {name}',
    deleted: '✅ Deleted branch: {name}',
    createFailed: '❌ Failed to create branch',
    deleteFailed: '❌ Failed to delete branch',
    cannotDeleteCurrent: '❌ Cannot delete current branch, please switch to another branch first',
    useForceDelete: '💡 Tip: If the branch contains unmerged changes, use --force or -f to force delete',
    selectAction: 'Select an action',
    actionCreate: '📝 Create branch',
    actionDelete: '🗑️  Delete branch',
    actionList: '📋 List branches',
    createMode: '📝 Create Branch',
    deleteMode: '🗑️  Delete Branch',
    createFromIssue: 'Create branch from Issue?',
    fetchingIssues: '🔍 Fetching Issues...',
    noIssues: '⚠️  No Issues found',
    manualCreate: '💡 Please enter branch name manually',
    enterBranchName: 'Enter branch name',
    selectIssue: 'Select an Issue',
    suggestedName: '💡 Suggested branch name: {name}',
    useSuggestedName: 'Use suggested branch name?',
    selectBranchToDelete: 'Select branch to delete',
    selectBranchesToDelete: 'Select branches to delete (use space to select multiple)',
    confirmDelete: 'Confirm delete branch "{name}"?',
    confirmDeleteMultiple: 'Confirm delete {count} branches? ({branches})',
    forceDelete: 'Force delete (including unmerged changes)?',
    deleteCancelled: '⚠️  Deletion cancelled',
    deleteComplete: '✅ Successfully deleted {count} branches',
    noDeletableBranches: '⚠️  No deletable branches',
    noRepoInfo: '⚠️  Cannot get repository information',
    noToken: '⚠️  Platform token not configured, cannot fetch Issues',
    fetchIssuesFailed: '⚠️  Failed to fetch Issues',
    unknownCommand: '❌ Unknown command: {command}',
    usage: '💡 Usage: quartz branch [create|delete|list] [branch-name] [options]',
  },
};
